Создай одностраничный лендинг с подключенной админ-панелью для редактирования контента и интеграцией формы заявок с Telegram-ботом. Проект должен быть сразу готов к деплою на Netlify.

Требования к проекту
Стек: React (Next.js или Vite) + TailwindCSS для фронтенда.

Хранение данных: Firestore (Firebase) или JSON API (хостящийся в репозитории).

Админ-панель: защищена паролем (через .env), доступна по отдельному URL (/admin).

Интеграция Telegram: заявки с сайта отправляются напрямую в Telegram-бот.

Готовность к деплою на Netlify: правильная структура проекта, корректный netlify.toml и поддержка serverless-функций для Telegram API.

Структура лендинга
Главный экран (Hero) – заголовок, подзаголовок, CTA-кнопка.

О себе – текстовый блок + фото.

Услуги – карточки с заголовком, иконкой и описанием.

Прайс-лист – таблица или карточки с ценами.

Портфолио – сетка с изображениями/ссылками.

Контакты/CTA – кнопка "Написать в Telegram" и форма заявки (имя, email, сообщение).

Форма заявки
Поля: имя, email, сообщение.

После отправки заявка через серверless-функцию Netlify отправляется в Telegram-бот с помощью Bot API.

Успех → сообщение "Ваша заявка отправлена".

Ошибка → уведомление об ошибке.

Ключи (BOT_TOKEN, CHAT_ID) хранятся в Netlify Environment Variables.

Админ-панель
Доступна только по URL /admin.

Авторизация по паролю (пароль хранится в .env).

Возможности:

Редактирование текста каждого блока.

Добавление/удаление карточек услуг, позиций прайса и элементов портфолио.

Загрузка изображений (Firebase Storage или локальная /public/img/).

Сохранение данных → обновление контента на лендинге в реальном времени.

Дизайн
Минимализм, много воздуха, асимметричная сетка.

Цветовая палитра: светлый фон, контрастные акценты (2–3 цвета).

Анимации: плавные эффекты (Framer Motion), параллакс при скролле.

Полная мобильная адаптация (flex/grid).

Технические детали
Проект должен быть готов к деплою на Netlify:

Конфигурация netlify.toml.

Serverless-функция /netlify/functions/sendToTelegram.js для заявок.

TailwindCSS для стилей.

Framer Motion для анимаций.

Firestore/JSON API для данных.

Админ-панель с простой авторизацией по паролю (через env).

Все данные сайта подгружаются динамически из базы.

Валидация форм (обязательные поля, проверка email).